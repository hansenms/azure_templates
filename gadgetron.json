{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "minLength": 2,
            "maxLength": 60
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 8
        },
        "disablePasswordAuth": {
            "type": "string",
            "defaultValue": "False",
            "allowedValues": [
                "True",
                "False"
            ],
            "metadata": {
                "description": "If the value is set to 'true', then the user may log in with both the password specified AND the SSH Public Keys too.  If the value is set to 'false', then the user may login with the SSH Keys specified only."
            }
        },
        "sshKeyValue1": {
            "type": "string",
            "metadata": {
                "description": "SSH Key Value #1 for use when logging in with the user defined in the adminUsername parameter"
            }
        },
        "sshKeyValue2": {
            "type": "string",
            "metadata": {
                "description": "SSH Key Value #2 for use when logging in with the user defined in the adminUsername parameter"
            }
        },
        "sshKeyValue3": {
            "type": "string",
            "metadata": {
                "description": "SSH Key Value #3 for use when logging in with the user defined in the adminUsername parameter"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.3.0.0/24"
        },
        "relayVmSize": {
            "type": "string",
            "defaultValue": "Standard_D3_V2"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D14_V2"
        },
        "numberOfComputeNodes": {
            "type": "int",
            "defaultValue": 2
        },
        "sizeOfDataDiskInGB": {
            "type": "int",
            "defaultValue": 1023
        },
        "managedDiskImageID": {
            "type": "string"
        },
        "gadgetronLogShare": {
            "type": "string",
            "defaultValue": "gtlogs"
        },
        "gadgetronDependenciesShare": {
            "type": "string",
            "defaultValue": "gtdependencies"
        },
        "azure_client_id": {
            "type": "string",
            "defaultValue": "NA"
        },
        "azure_tenant_id": {
            "type": "string",
            "defaultValue": "NA"
        },
        "azure_key": {
            "type": "string",
            "defaultValue": "NA"
        }
    },
    "variables": {
        "OSDiskName": "GTOsDisk",
        "securityGroupName": "GadgetronNSG",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName": "[concat(resourceGroup().name,'PublicIP')]",
        "storageAccountName": "[toLower(concat(replace(resourceGroup().name,'-',''),'sa'))]",
        "vmStorageAccountContainerName": "vhds",
        "nicPrefix": "[concat(resourceGroup().name,'Nic')]",
        "nicGateway": "[concat(variables('nicPrefix'),'Gateway')]",
        "nicRelay": "[concat(variables('nicPrefix'),'Relay')]",
        "vmnamerelay": "[concat(resourceGroup().name, 'relay')]",
        "vmprefix": "[concat(resourceGroup().name,'node')]",
        "vnetname": "[concat(resourceGroup().name,'VNet')]",
        "vsubnetname": "[concat(resourceGroup().name,'VSubnet')]",
        "dnsNameforLBIP": "[toLower(resourceGroup().name)]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetname'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('vsubnetname'))]",
        "logshare": "[concat('//',variables('storageAccountName'),'.file.core.windows.net/', parameters('gadgetronLogShare'))]",
        "dependenciesshare": "[concat('//',variables('storageAccountName'),'.file.core.windows.net/', parameters('gadgetronDependenciesShare'))]",
        "configuration_info": "[concat('{ \"group\": \"', resourceGroup().name, '\", \"azure_client_id\": \"', parameters('azure_client_id'),'\", ', '\"azure_tenant_id\": \"', parameters('azure_tenant_id'), '\", ', '\"azure_key\": \"', parameters('azure_key'), '\", ', '\"logshare\": \"', variables('logshare'), '\",', '\"dependenciesshare\": \"', variables('dependenciesshare'), '\", ' , '\"storageaccount\": \"', variables('storageAccountName'), '\" }')]",
        "computeApiVersion": "2017-03-30",
        "networkApiVersion": "2017-04-01",
        "storageApiVersion": "2017-06-01"
    },
    "resources": [
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('securityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "Allows SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "relay",
                        "properties": {
                            "description": "Allow traffic from virtual network",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsNameforLBIP')]"
                }
            }
        },
        {
            "name": "[variables('vnetname')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Network/virtualNetworks",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vsubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('addressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicRelay')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1relay",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmnamerelay')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicRelay'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('relayVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(resourceGroup().name, 'relay')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[parameters('disablePasswordAuth')]",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyValue1')]"
                                },
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyValue2')]"
                                },
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyValue3')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('configuration_info'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[parameters('managedDiskImageID')]"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "osdiskrelay",
                        "createOption": "FromImage",
                        "caching": null,
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                   {
                     "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
                     "lun": 0,
                     "createOption": "Empty"
                   },
                   {
                     "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
                     "lun": 1,
                     "createOption": "Empty"
                   },
                   {
                     "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
                     "lun": 2,
                     "createOption": "Empty"
                   },
{
                     "diskSizeGB": "[parameters('sizeOfDataDiskInGB')]",
                     "lun": 3,
                     "createOption": "Empty"
                   }
                   ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicRelay'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmnamerelay'),'/', 'SetupRelay')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmnamerelay'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/mount_and_run_docker.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/setup_relay.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/azure_login.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/get_custom_data.sh"
                    ],
                    "commandToExecute": "bash setup_relay.sh"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[toLower(variables('vmprefix'))]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetname'))]"
            ],
            "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": 0
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": {
                            "id": "[parameters('managedDiskImageID')]"
                        },
                        "osDisk": {
                            "osType": "Linux",
                            "caching": null,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                             },
                            "createOption": "FromImage"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[toLower(variables('vmprefix'))]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(toLower(variables('vmprefix')),'nic')]",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(toLower(variables('vmprefix')),'ipconfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('vnetname'), '/subnets/', variables('vsubnetname'))]"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "configstor",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.4",
                                    "settings": {
                                        "fileUris": [
                                            "https://raw.githubusercontent.com/hansenms/azure_templates/master/mount_and_run_docker.sh"
                                        ],
                                        "commandToExecute": "[concat('sh mount_and_run_docker.sh ', reference(variables('nicRelay')).ipConfigurations[0].properties.privateIPAddress, ' ', reference(variables('nicRelay')).ipConfigurations[0].properties.privateIPAddress)]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {}
}
