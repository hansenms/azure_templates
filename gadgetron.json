{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "minLength": 2,
            "maxLength": 60
        },
        "adminPassword": {
            "type": "string",
            "minLength": 8
        },
        "disablePasswordAuth": {
            "type": "string",
            "defaultValue": "False",
            "allowedValues": [
                "True",
                "False"
            ],
            "metadata": {
                "description": "If the value is set to 'true', then the user may log in with both the password specified AND the SSH Public Keys too.  If the value is set to 'false', then the user may login with the SSH Keys specified only."
            }
        },
        "sshKeyValue": {
            "type": "string",
            "metadata": {
                "description": "SSH Key Value #1 for use when logging in with the user defined in the adminUsername parameter"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.3.0.0/24"
        },
        "relayVmSize": {
            "type": "string",
            "defaultValue": "Standard_D3_V2"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D14_V2"
        },
        "numberOfComputeNodes": {
            "type": "int",
            "defaultValue": 2
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "14.04.2-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.2-LTS",
                "15.04"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04."
            }
        },
        "gadgetronDockerImage": {
            "type": "string",
            "defaultValue": "gadgetron/ubuntu_1404_no_cuda"
        },
        "gadgetronStorageGroup": {
            "type": "string",
            "defaultValue": "GadgetronStorage"
        },
        "gadgetronStorageAccount": {
            "type": "string",
            "defaultValue": "gtstore"
        },
        "gadgetronLogShare": {
            "type": "string",
            "defaultValue": "gtlogs"
        },
        "gadgetronDependenciesShare": {
            "type": "string",
            "defaultValue": "gtdependencies"
        },
        "dockeruser": {
            "type": "string"
        },
        "dockerpassword": {
            "type": "securestring"
        },
        "dockeremail": {
            "type": "string"
        },
        "azure_client_id": {
            "type": "string",
            "defaultValue": "NA"
        },
        "azure_tenant_id": {
            "type": "string",
            "defaultValue": "NA"
        },
        "azure_key": {
            "type": "string",
            "defaultValue": "NA"
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "OSDiskName": "GTOsDisk",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName": "[concat(resourceGroup().name,'PublicIP')]",
        "storageAccountName": "[toLower(concat(replace(resourceGroup().name,'-',''),'sa'))]",
        "vmStorageAccountContainerName": "vhds",
        "nicPrefix": "[concat(resourceGroup().name,'Nic')]",
        "nicGateway": "[concat(variables('nicPrefix'),'Gateway')]",
        "nicRelay": "[concat(variables('nicPrefix'),'Relay')]",
        "vmnamerelay": "[concat(resourceGroup().name, 'relay')]",
        "vmprefix": "[concat(resourceGroup().name,'node')]",
        "vnetname": "[concat(resourceGroup().name,'VNet')]",
        "vsubnetname": "[concat(resourceGroup().name,'VSubnet')]",
        "dnsNameforLBIP": "[toLower(resourceGroup().name)]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetname'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('vsubnetname'))]",
        "logshare": "[concat('//',parameters('gadgetronStorageAccount'),'.file.core.windows.net/', parameters('gadgetronLogShare'))]",
        "dependenciesshare": "[concat('//',parameters('gadgetronStorageAccount'),'.file.core.windows.net/', parameters('gadgetronDependenciesShare'))]",
        "gtdockerexturi": "https://raw.githubusercontent.com/hansenms/azure_templates/master/gadgetron_docker_extension.json",
        "gtnodeuri": "https://raw.githubusercontent.com/hansenms/azure_templates/master/gadgetron_node.json",
        "configuration_info": "[concat('{ \"group\": \"', resourceGroup().name, '\", \"azure_client_id\": \"', parameters('azure_client_id'),'\", ', '\"azure_tenant_id\": \"', parameters('azure_tenant_id'), '\", ', '\"azure_key\": \"', parameters('azure_key'), '\", ', '\"logshare\": \"', variables('logshare'), '\",', '\"dependenciesshare\": \"', variables('dependenciesshare'), '\", ' , '\"storageaccount\": \"', parameters('gadgetronStorageAccount'), '\" }')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsNameforLBIP')]"
                }
            }
        },
        {
            "name": "[variables('vnetname')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Network/virtualNetworks",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vsubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('addressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicRelay')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1relay",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },    
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmnamerelay')]",
            "location": "[resourceGroup().location]",
             "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicRelay'))]"
            ],
              "properties": {
                  
               "hardwareProfile": {
                    "vmSize": "[parameters('relayVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(resourceGroup().name, 'relay')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[parameters('disablePasswordAuth')]",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyValue')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('configuration_info'))]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "name": "gt-f8095f2b-112a07a3-osDisk.7df2a746-54bd-4a5c-8a48-769d408295e2.vhd",
                        "createOption": "FromImage",
                        "image": {
                            "uri": "https://gtimage5317.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/gt-f8095f2b-112a07a3-osDisk.7df2a746-54bd-4a5c-8a48-769d408295e2.vhd"
                        },
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicRelay'))]"
                        }
                    ]
                }
            }
        },        
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmnamerelay'),'/', 'SetupRelay')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmnamerelay'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/mount_and_run_docker.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/setup_relay.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/azure_login.sh",
                        "https://raw.githubusercontent.com/hansenms/azure_templates/master/get_custom_data.sh"
                        
                    ],
                    "commandToExecute": "[concat('bash setup_relay.sh ', variables('logshare'), ' ', variables('dependenciesshare'), ' ', parameters('gadgetronStorageAccount'), ' ', listKeys(resourceId(parameters('gadgetronStorageGroup'),'Microsoft.Storage/storageAccounts',parameters('gadgetronStorageAccount')) ,'2015-05-01-preview').key1, ' && mkdir -p /mnt/gtlog/', variables('vmnamerelay'))]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "copy": {
                "name": "nodeloop",
                "count": "[parameters('numberOfComputeNodes')]"
            },
            "name": "[concat(variables('vmprefix'),copyIndex())]",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetname'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicRelay'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('gtnodeuri')]",
                    "contentVersion": "0.0.0.1"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(variables('vmprefix'),copyIndex())]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "sshKeyValue": {
                        "value": "[parameters('sshKeyValue')]"                    
                    },
                    "vNetName": {
                        "value": "[variables('vnetname')]"
                    },
                    "subNetName": {
                        "value": "[variables('vsubnetname')]"
                    },
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "logShare": {
                        "value": "[variables('logshare')]"
                    },
                    "dependenciesShare": {
                        "value": "[variables('dependenciesshare')]"
                    },
                    "relayip": {
                        "value": "[reference(variables('nicRelay')).ipConfigurations[0].properties.privateIPAddress]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}